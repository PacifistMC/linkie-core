plugins {
    id("org.jetbrains.kotlin.jvm") version("2.0.20")
    id("org.jetbrains.kotlin.plugin.serialization") version("2.0.20")
    id("java")
    id("maven-publish")
    id("signing")
}

group "dev.lewds.entwinemc.libs"
version = "1.0.121+0.0.2" // 1.0.121 is the original version this fork is based on, 0.0.1 is the fork version

sourceCompatibility = targetCompatibility = 1.8

test {
    useJUnitPlatform()
}

tasks.test {
    filter {
        includeTestsMatching("me.shedaniel.linkie.core.tests.*")
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.fabricmc.net"
        metadataSources {
            it.mavenPom()
            it.ignoreGradleMetadataRedirection()
        }
    }
    maven { url "https://maven.quiltmc.org/repository/release" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://maven.quiltmc.org/repository/release" }
}

dependencies {
    compile("com.github.Chocohead:Tiny-Mappings-Parser:d96d4070293d9e7054693c21552eb1eb2b149679")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.20")
    compile("org.jetbrains.kotlin:kotlin-reflect:2.0.20")
    compile("org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1")
    compile("ch.qos.logback:logback-classic:1.2.13")
    compile("org.dom4j:dom4j:2.1.4")
    compile("net.fabricmc:stitch:0.6.2") {
        exclude group: "net.fabricmc", module: "tiny-mappings-parser"
    }

    testCompile("org.junit.jupiter:junit-jupiter:5.6.2")
    testCompile("org.jetbrains.kotlin:kotlin-test-junit5:2.0.20")

    compile("com.soywiz.korlibs.korio:korio:$korlibs_version")
    compile("com.squareup.okio:okio:$okio_version")
    compile("org.quiltmc:mappings-hasher:1.1.1:all")
    compile("com.google.guava:guava:32.0.0-jre")
    compile("net.fabricmc:tiny-remapper:0.10.4")
    compile("org.vineflower:vineflower:1.10.1")
}

def compile(str, closure = {}) {
    dependencies.api(str, closure)
}

def testCompile(str, closure = {}) {
    dependencies.testApi(str, closure)
}

compileKotlin {
    kotlinOptions {
        suppressWarnings = true
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xinline-classes", "-Xopt-in=kotlin.RequiresOptIn"]
    }
}

compileTestKotlin {
    kotlinOptions {
        suppressWarnings = true
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xinline-classes", "-Xopt-in=kotlin.RequiresOptIn"]
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set("javadocs")
    javadocs.failOnError false
    from javadocs.destinationDir
}

publishing {
    publications {
        publication(MavenPublication) {
            from components.java
            artifact(sourcesJar)
            artifact(javadocsJar)
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "https://maven.lewds.dev/releases"
                credentials {
                    username = "ran"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}
